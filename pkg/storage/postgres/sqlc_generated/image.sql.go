// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.23.0
// source: image.sql

package postgres

import (
	"context"
)

const addImage = `-- name: AddImage :one
INSERT INTO image (id, label, src)
VALUES (uuid_generate_v4(), $1, $2)
RETURNING id, src, label
`

type AddImageParams struct {
	Label string
	Src   string
}

func (q *Queries) AddImage(ctx context.Context, arg AddImageParams) (Image, error) {
	row := q.db.QueryRow(ctx, addImage, arg.Label, arg.Src)
	var i Image
	err := row.Scan(&i.ID, &i.Src, &i.Label)
	return i, err
}

const listImages = `-- name: ListImages :many
SELECT id, src, label FROM image
`

func (q *Queries) ListImages(ctx context.Context) ([]Image, error) {
	rows, err := q.db.Query(ctx, listImages)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Image
	for rows.Next() {
		var i Image
		if err := rows.Scan(&i.ID, &i.Src, &i.Label); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
